{"version":3,"sources":["StockTable.js","axios.js","watchList/watchList.js","App.js","reportWebVitals.js","index.js"],"names":["STOCKS_KEY","StockTable","useState","stockData","setStockData","useEffect","JSON","parse","localStorage","getItem","fetch","process","then","res","json","data","symbols","lastUpdated","Date","setItem","stringify","catch","err","console","error","i","columns","title","dataIndex","render","text","push","key","symbol","company_name","description","type","log","rowSelection","onChange","selectedRowKeys","selectedRows","getCheckboxProps","record","name","dataSource","instance","axios","create","baseURL","timeout","WatchList","props","setShowAddModal","isVisible","setState","addModalVisible","state","watchLists","sessionStorage","id","style","marginBottom","onClick","this","map","watchList","visible","onCancel","maskClosable","footer","destroyOnClose","paddingTop","onFinish","values","post","listname","Item","label","rules","required","message","htmlType","React","Component","info","App","get","className","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc1fd4d8.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Table} from 'antd';\r\n\r\nconst STOCKS_KEY = 'stocks';\r\nconst API_KEY = process.env.REACT_APP_FINNHUB_KEY;\r\n\r\nexport default function StockTable() {\r\n  const [stockData, setStockData] = useState({});\r\n\r\n  useEffect(() => {\r\n    let stockData = JSON.parse(localStorage.getItem(STOCKS_KEY));\r\n    if(!stockData) {\r\n      fetch(`https://finnhub.io/api/v1/stock/symbol?exchange=US&token=${API_KEY}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        stockData = { symbols: data, lastUpdated: new Date() };\r\n        localStorage.setItem(STOCKS_KEY, JSON.stringify(stockData));\r\n      }).catch(err => console.error(err));\r\n    } else {\r\n      setStockData(stockData);\r\n    }\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Company Name',\r\n      dataIndex: 'company_name',\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Symbol',\r\n      dataIndex: 'symbol',\r\n    },\r\n    {\r\n      title: 'Type',\r\n      dataIndex: 'type'\r\n    }\r\n  ]\r\n\r\n  const data = [];\r\n  var i;\r\n  for (i of stockData.symbols){\r\n    data.push(\r\n      {\r\n        key: i.symbol,\r\n        company_name: i.description,\r\n        symbol: i.symbol,\r\n        type: i.type\r\n      }\r\n    )\r\n  }\r\n\r\n  console.log(stockData.symbols)\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          onChange: (selectedRowKeys, selectedRows) => {\r\n            console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n          },\r\n          getCheckboxProps: (record) => ({ name: record.name }),\r\n        }}\r\n        columns={columns}\r\n        dataSource={data}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:5000',\r\n  timeout: 1000\r\n});\r\n\r\nexport default instance","import React from 'react';\r\nimport {Table, Button, Modal, Form, Input} from 'antd';\r\nimport { FallOutlined } from '@ant-design/icons';\r\nimport instance from '../axios'\r\n//watchList representation\r\n// [{name, symbols}]\r\n\r\nclass WatchList extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      watchLists: JSON.parse(sessionStorage.getItem('watchList')) || [],\r\n      addModalVisible: false\r\n    };\r\n  }\r\n\r\n  setShowAddModal = (isVisible = true) => this.setState({addModalVisible: isVisible})\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'Symbol',\r\n        key: 'symbol',\r\n        dataIndex: 'symbol'\r\n      },\r\n      {\r\n        title: 'Current Price',\r\n        key: 'currentPrice',\r\n        dataIndex: 'currentPrice'\r\n      },\r\n      {\r\n        title: 'Amount of Shares',\r\n        key: 'shareAmount',\r\n        dataIndex: 'shareAmount'\r\n      },\r\n      {\r\n        title: 'Percentage Changed',\r\n        key: 'percentageChanged',\r\n        dataIndex: 'percentageChanged'\r\n      },\r\n\r\n    ];\r\n\r\n    return <div id='watch-list-container'>\r\n      <Button\r\n        style={{ marginBottom: 35}}\r\n        type='primary'\r\n        onClick={this.setShowAddModal}\r\n        >Add a Watch list\r\n        </Button>\r\n      {\r\n        this.state.watchLists.map(watchList => {\r\n          const { id, name, symbols} = watchList; // destructuring, ES6\r\n          return <div key={id}>\r\n              <h3>{name}</h3>\r\n              <Table\r\n                columns={columns}\r\n                dataSource={symbols || []}\r\n              />\r\n            </div>\r\n        })\r\n      }\r\n      <Modal\r\n        visible = {this.state.addModalVisible}\r\n        onCancel={() => this.setShowAddModal(false)}\r\n        maskClosable={false}\r\n        footer={null}\r\n        destroyOnClose\r\n      >\r\n        <div style={{paddingTop: 25}}>\r\n          <Form\r\n            onFinish={values => {\r\n              const { name } = values;\r\n              instance.post('/watchlist/create', {\r\n                    listname: name,\r\n                  });\r\n            }\r\n            \r\n            }\r\n            // onFinish={values => {\r\n            //   const {name} = values;\r\n            //   const newWatchLists = [...this.state.watchLists];\r\n            //   const id = `${name}-${new Date().getTime()}`;\r\n              \r\n            //   newWatchLists.push({id, name})\r\n            //   this.setState({ watchLists: newWatchLists, addModalVisible: false });\r\n\r\n            //   sessionStorage.setItem('watchList', JSON.stringify(newWatchLists))\r\n\r\n            //   instance.post('/watchlist/create', {\r\n            //     listname: name,\r\n            //     createTime : Date.getTime(),\r\n            //   });\r\n            // }}\r\n          >\r\n            <Form.Item\r\n              name='name'\r\n              label='Watch List Name'\r\n              rules={[\r\n                {required: true, message: 'Please input list name'}\r\n              ]}\r\n            >\r\n              <Input/>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type='primary' htmlType='submit'>Submit</Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </Modal>\r\n      </div>\r\n  }\r\n}\r\n\r\nexport default WatchList;\r\n","import React, {useEffect} from 'react'\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { Row, Col, Divider } from 'antd';\nimport Stocks from './Stocks';\nimport TickerSearch from './TickerSearch';\nimport StockTable from './StockTable';\nimport WatchList from './watchList/watchList';\nimport Nav from './Nav'\nimport instance from './axios'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nconsole.log('heree');\nconsole.info('heree');\nconsole.error('ERROR')\n\nfunction App() {\n\n  useEffect(() => {\n    instance.get('/10')\n    .then(res => console.log('res', res.data))\n    .catch(err => console.error(err));\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h1>Portfolio App</h1>\n      <Router>\n        <Switch>\n          <Route path=\"/watchlist\" exact component={WatchList} />\n          <Route path=\"/stocktable\" component={StockTable} />\n        </Switch>\n      </Router>\n      \n      {/* <Divider orientation=\"left\">Ticker Search</Divider>\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n          <Col className=\"gutter-row\" span={14}>\n            <div><StickerSearch/></div>\n          </Col>\n          <Col className=\"gutter-row\" span={10}>\n            <div><Stocks/></div>\n          </Col>\n        </Row> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}